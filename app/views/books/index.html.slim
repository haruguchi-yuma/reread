- content_for(:html_title) { '書籍の一覧' }

.index-book.pt-4
  .columns.is-vcentered.py-4
    h1.title.column.is-3 読み返したい本リスト
    #show-modal.column.has-text-right
      button.button.is-warning 読み返したい本を登録する

  #modal-window.modal
    #modal-background.modal-background
    .modal-card
      .modal-card-head
        p.modal-card-title
          | 読み返したい本を登録する
        button#close-modal.delete aria-label="close"
      = form_with model: @book, remote: true do |f|
        section.modal-card-body
          .content
            - if @book.errors.any?
              #error_explanation.message.is-light
                ul
                  - @book.errors.full_messages.each do |message|
                    li.message-body = message
            = f.label :title, class: 'label'
            = f.text_field :title, class: 'input'
        footer.modal-card-foot.is-justify-content-flex-end
          a#close-button.button = 'キャンセル'
          = f.submit class: 'button is-warning'

  .mb-3
    = paginate @books
  - if @books.present?
    table.table.is-fullwidth
      thead
        tr
          th = Book.human_attribute_name(:title)
          th = Photo.human_attribute_name(:updated_at)
          th = ReadHistory.human_attribute_name(:read_back_on)
      tbody
        - @books.each do |book|
          tr
            td = link_to book_path(book), class: 'is-size-5 has-text-weight-semibold' do
              = book.title
              span.photo-count.is-size-6.ml-4 = book.photos.count

            td.has-text-grey = book.last_update_of_photo
            td.has-text-grey = l(book.read_histories.last.read_back_on, format: :date) if book.read_histories.present?
  - else
    .blank-page.has-text-centered.has-text-grey
        .o-empty-message__text
          | 読み返したい本の登録はまだありません
        .is-size-1
          i.far.fa-sad-tear
